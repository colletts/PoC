<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf">

	<property-placeholder persistent-id="org.fusesource.camel.ws"
		xmlns="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0">
		<default-properties>
			<property name="server.de.16" value="http://localhost:8185" />
		</default-properties>
	</property-placeholder>

	<!-- soap service -->
	<cxf:cxfEndpoint id="portfolioEndpointDE16" address="${server.de.16}/cxf/policy"
		serviceClass="org.poc.ws.PolicyEndpoint" />

	<!-- rest service -->
	<cxf:rsServer id="restEndpointDE16" address="${server.de.16}/rest/"
		serviceClass="org.poc.rs.PoliciesRestService" />

	<camelContext trace="false" id="DE16-context"
		xmlns="http://camel.apache.org/schema/blueprint">
		<route id="DE16-soapws-restws">
			<from uri="cxf:bean:portfolioEndpointDE16" />
			<log message="DE16 body ${body}" />

			<choice>
				<when>
					<simple>${header.operationName} == 'getPolicy'</simple>
					<setHeader headerName="CamelHttpMethod">
						<constant>GET</constant>
					</setHeader>
					<setHeader headerName="CamelHttpUri">
						<simple>${properties:server.de.16}/rest/policy/${body}</simple>
					</setHeader>
				</when>
				<when>
					<simple>${header.operationName} == 'createPolicy'</simple>
					<setHeader headerName="CamelHttpMethod">
						<constant>POST</constant>
					</setHeader>
					<setHeader headerName="CamelHttpUri">
						<simple>${properties:server.de.16}/rest/policy</simple>
					</setHeader>
				</when>
				<when>
					<simple>${header.operationName} == 'updatePolicy'</simple>
					<setHeader headerName="CamelHttpMethod">
						<constant>PUT</constant>
					</setHeader>
					<setHeader headerName="CamelHttpUri">
						<simple>${properties:server.de.16}/rest/policy/${in.body[0]}
						</simple>
					</setHeader>
					<transform>
						<simple>in.body[1]</simple>
					</transform>
				</when>
				<when>
					<simple>${header.operationName} == 'deletePolicy'</simple>
					<setHeader headerName="CamelHttpMethod">
						<constant>DELETE</constant>
					</setHeader>
					<setHeader headerName="CamelHttpUri">
						<simple>${properties:server.de.16}/rest/policy/${body}</simple>
					</setHeader>
				</when>
			</choice>
			<log message="DE16 calling ${header.CamelHttpUri}" />
			<inOut uri="http://dummy" />
			<!-- need to convert before any logging or enable streamCaching -->
			<convertBodyTo type="java.lang.String" />
			<log message="After rest response transform ${body}" />
		</route>

		<!-- Test rest service -->
		<route id="de16PoliciesRestServiceRoute">
			<from uri="cxfrs:bean:restEndpointDE16?bindingStyle=SimpleConsumer" />
			<removeHeader headerName="Content-Length" />
			<choice>
				<when>
					<simple>${header.operationName} == 'getPolicyById'</simple>
					<to uri="direct:getPolicyById" />
				</when>
				<when>
					<simple>${header.operationName} == 'createPolicy'</simple>
					<to uri="direct:createPolicy" />
				</when>
				<when>
					<simple>${header.operationName} == 'updatePolicy'</simple>
					<to uri="direct:updatePolicy" />
				</when>
				<when>
					<simple>${header.operationName} == 'deletePolicyById'</simple>
					<to uri="direct:deletePolicy" />
				</when>
			</choice>
		</route>

		<route id="rs-getPolicyDE16">
			<from uri="direct:getPolicyById" />
			<transform>
				<simple>${header.operationName} GET called with id = ${header.id}</simple>
			</transform>
		</route>
		<route id="rs-createPolicyDE16">
			<from uri="direct:createPolicy" />
			<transform>
				<simple>REST ${header.operationName} POST called with content =	${body}</simple>
			</transform>
		</route>

		<route id="rs-updatePolicyIdDE16">
			<from uri="direct:updatePolicy" />
			<transform>
				<simple>REST ${header.operationName} PUT called with id = ${header.id}, content = ${body}</simple>
			</transform>
		</route>

		<route id="rs-deletePolicyDE16">
			<from uri="direct:deletePolicy" />
			<transform>
				<simple>REST ${header.operationName} DELETE called with id = ${header.id}</simple>
			</transform>
		</route>
	</camelContext>
</blueprint>